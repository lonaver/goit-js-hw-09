{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,QAChCC,EAAeF,SAASC,cAAc,uBACtCE,EAAcH,SAASC,cAAc,sBACrCG,EAAgBJ,SAASC,cAAc,wBAE7C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAIpCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAsBPR,EAAOe,iBAAiB,UAlBI,SAAAC,GAC1BA,EAAEC,iBAKF,IAJA,IAAMC,EAAkBC,OAAOd,EAAce,OACzCC,EAAQF,OAAOhB,EAAaiB,OAC1BE,EAAcH,OAAOf,EAAYgB,OAE9BG,EAAW,EAAGA,EAAWL,EAAiBK,IACjDjB,EAAciB,EAAUF,GACrBG,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,M,OACjBV,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE9DqB,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,M,OAClBV,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE9Da,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('form');\nconst inputDelayEl = document.querySelector('input[name=\"delay\"]');\nconst inputStepEl = document.querySelector('input[name=\"step\"]');\nconst inputAmountEl = document.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        // console.log('resolve', position, delay);\n        resolve({ position, delay });\n      } else {\n        // console.log('reject', position, delay);\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst handleSubmitPromise = e => {\n  e.preventDefault();\n  const numberOfPromise = Number(inputAmountEl.value);\n  let delay = Number(inputDelayEl.value);\n  const stepPromise = Number(inputStepEl.value);\n\n  for (let position = 0; position < numberOfPromise; position++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    delay += stepPromise;\n  }\n};\n\nformEl.addEventListener('submit', handleSubmitPromise);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelayEl","$ce04d3a99e08e73b$var$inputStepEl","$ce04d3a99e08e73b$var$inputAmountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","numberOfPromise","Number","value","delay1","stepPromise","position1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.9c324420.js.map"}